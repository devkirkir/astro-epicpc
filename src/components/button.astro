---
interface Props {
  type: "primary" | "secondary" | "sub";
  className?: string;
  label?: string;
}

const { label, type, className } = Astro.props;
---

<button type="button" class:list={[type, className]}><slot /><span>{label}</span></button>

<style>
  button {
    display: flex;
    align-items: center;
    gap: 5px;

    color: var(--white);

    background: transparent;

    border: none;

    cursor: pointer;
    transition: 0.2s linear;
  }

  .primary {
    font-size: 14px;
    background-color: var(--primary-color);
    border-radius: 12px;
    padding: 8px 16px;

    &:hover {
      background-color: var(--primary-color-hover);
    }

    &:active {
      background-color: var(--primary-color-active);
    }
  }

  .sub {
    font-size: 12px;

    &:hover {
      color: var(--primary-color-hover);
    }

    &:active {
      color: var(--primary-color-active);
    }
  }

  .burger-button {
    display: none;

    & span {
      display: none;
    }
  }

  @media screen and (max-width: 960px) {
    .phone-button {
      display: none;
    }

    .burger-button {
      display: flex;
    }
  }
</style>
